{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Editor.svelte",
    "../../Syllabus.svelte",
    "../../SyllabusGrid.svelte",
    "../../SyllabusGridAddress.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { arweave } from \"./arweave.js\";\n  import { readContract, selectWeightedPstHolder } from \"smartweave\";\n  import { publish } from \"./syllabus.js\";\n  import { onMount } from \"svelte\";\n  import { documentTitle } from \"./helpers.js\";\n  import { quill } from \"svelte-quill\";\n  import {\n    editSubjects,\n    editLanguages,\n    editBadges,\n    editDurations,\n    editMentors,\n    editPrices,\n  } from \"./populate.js\";\n  import { CONTRACTID } from \"./constants.js\";\n  export let wallet;\n  export let address;\n  let lengthToAdd = 0;\n  let enablePreview = false;\n  let options = {\n    modules: {\n      toolbar: [\n        [{ header: [1, 2, 3, 4, 5, 6] }],\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\n        [\"blockquote\", \"code-block\", \"link\", \"image\", \"video\"],\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\n        [{ script: \"sub\" }, { script: \"super\" }],\n        [{ color: [] }, { background: [] }],\n        [\"clean\"],\n      ],\n    },\n    placeholder: \"Start to write your syllabus...\",\n    theme: \"snow\",\n  };\n  let syllabusContent = {\n    html: \"Start to write your syllabus...\",\n    text: \"Start to write your syllabus...\",\n  };\n  let subjectEdited;\n  let languageEdited;\n  let badgeEdited;\n  let durationEdited;\n  let mentorEdited;\n  let priceEdited;\n  let pstRecipient;\n  let pstFeeRecipient = 0.05;\n  function handleEditedSubject() {\n    subject = subjectEdited.text;\n  }\n  function handleEditedLanguage() {\n    language = languageEdited.text;\n  }\n  function handleEditedBadge() {\n    badge = badgeEdited.text;\n  }\n  function handleEditedDuration() {\n    duration = durationEdited.text;\n  }\n  function handleEditedMentor() {\n    mentorAvailable = mentorEdited.text;\n  }\n  function handleEditedPrice() {\n    price = priceEdited.text;\n  }\n  function previewFile() {\n    const preview = document.querySelector(\"img\");\n    const file = document.querySelector(\"input[type=file]\").files[0];\n    const reader = new FileReader();\n    reader.addEventListener(\n      \"load\",\n      function () {\n        preview.src = reader.result;\n        imageUrl = reader.result;\n        lengthToAdd = imageUrl.length;\n      },\n      false\n    );\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  }\n  let id = \"\";\n  let apiVersion = \"1\";\n  let rating = \"0.0\";\n  let reviewCount = \"0\";\n  let isFavorite = \"false\";\n  let status = \"Published\";\n  let title = \"\";\n  let subtitle = \"\";\n  let imageUrl = \"\";\n  let subject = \"Arts\";\n  let language = \"English\";\n  let badge = \"New\";\n  let duration = \"5 minutes\";\n  let price = \"2.49\";\n  let mentorAvailable = \"Available\";\n  async function getContractState() {\n    return readContract(arweave, CONTRACTID).then((state) => {\n      return state;\n    });\n  }\n  const submitSyllabus = async () => {\n    if (!wallet || !address) {\n      return;\n    }\n\n    let contractState = await getContractState();\n    pstRecipient = selectWeightedPstHolder(contractState.balances);\n    let pstTx = await arweave.createTransaction(\n      {\n        target: pstRecipient,\n        quantity: arweave.ar.arToWinston(pstFeeRecipient),\n      },\n      wallet\n    );\n    await arweave.transactions.sign(pstTx, wallet);\n    await arweave.transactions.post(pstTx);\n    handleEditedLanguage();\n    handleEditedBadge();\n    handleEditedDuration();\n    handleEditedMentor();\n    handleEditedPrice();\n    const tx = await publish(\n      {\n        id: id,\n        title: title,\n        subtitle: subtitle,\n        imageUrl: lengthToAdd,\n        duration: duration,\n        language: language,\n        rating: rating,\n        reviewCount: reviewCount,\n        isFavorite: isFavorite,\n        badge: badge,\n        author: address,\n        mentorAvailable: mentorAvailable,\n        subject: subject,\n        status: status,\n        apiVersion: apiVersion,\n        content: imageUrl + syllabusContent.html,\n        price: price,\n      },\n      wallet,\n      address\n    );\n    window.location.href = `#/syllabus/${tx.id}`;\n  };\n  onMount(() => {\n    documentTitle(\"Editor\");\n  });\n</script>\n\n<style>\n  .editor {\n    font-size: 1rem;\n  }\n</style>\n\n<svelte:head>\n  <link href=\"//cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\" />\n</svelte:head>\n<div class=\"py-6 antialiased text-gray-900 px-6\">\n  <form on:submit|preventDefault={submitSyllabus}>\n    <div class=\"max-w-2xl mx-auto\">\n      <h1 class=\"content-center text-bold text-2xl w-full\">\n        List Your Syllabus\n      </h1>\n      <div class=\"mt-4 flex flex-wrap -mx-6\">\n        <div class=\"w-1/2 px-6\">\n          <label class=\"block\">\n            <span class=\"text-gray-900\">Title</span>\n            <input\n              type=\"text\"\n              name=\"title\"\n              class=\"form-input mt-1 block w-full text-gray-900 shadow\n                bg-gray-400 hover:border-gray-200 focus:bg-gray-300 border-none\"\n              required\n              on:input={(event) => (title = event.target.value)} />\n          </label>\n          <label class=\"block mt-4\">\n            <span class=\"text-gray-900\">Subtitle</span>\n            <input\n              type=\"text\"\n              name=\"subtitle\"\n              class=\"form-input mt-1 block w-full text-gray-900 shadow\n                bg-gray-400 hover:border-gray-200 focus:bg-gray-300 border-none\"\n              required\n              on:input={(event) => (subtitle = event.target.value)} />\n          </label>\n          <label class=\"block mt-4\" for=\"mentorship\">\n            <span class=\"text-gray-900\">Mentorship</span>\n            <div class=\"sm:flex lg:block lg:mx-0\">\n              <select\n                class=\"mt-1 form-select block w-full text-gray-900 shadow\n                  bg-gray-400 hover:border-gray-200 focus:bg-gray-300\n                  border-none\"\n                name=\"mentorship\"\n                bind:value={mentorEdited}\n                on:blur={handleEditedMentor}>\n                {#each editMentors as editMentor}\n                  <option value={editMentor}>{editMentor.text}</option>\n                {/each}\n              </select>\n            </div>\n          </label>\n          {#if mentorAvailable === 'Available'}\n            <label class=\"block mt-4\" for=\"pricing\">\n              <span class=\"text-gray-900\">Price in AR tokens per 30 mins</span>\n              <div class=\"sm:flex lg:block lg:mx-0\">\n                <select\n                  class=\"mt-1 form-select block w-full text-gray-900 shadow\n                    bg-gray-400 hover:border-gray-200 focus:bg-gray-300\n                    border-none\"\n                  name=\"pricing\"\n                  bind:value={priceEdited}\n                  on:blur={handleEditedPrice}>\n                  {#each editPrices as editPrice}\n                    <option value={editPrice}>{editPrice.text}</option>\n                  {/each}\n                </select>\n              </div>\n            </label>\n          {/if}\n        </div>\n        <div class=\"w-1/2 px-6\">\n          <label class=\"block\" for=\"subject\">\n            <span class=\"text-gray-900\">Subject</span>\n            <div class=\"sm:flex sm:-mx-2 lg:block lg:mx-0\">\n              <select\n                class=\"mt-1 form-select block w-full text-gray-900 shadow\n                  bg-gray-400 hover:border-gray-200 focus:bg-gray-300\n                  border-none mr-2\"\n                name=\"subject\"\n                bind:value={subjectEdited}\n                on:blur={handleEditedSubject}>\n                {#each editSubjects as editSubject}\n                  <option value={editSubject}>{editSubject.text}</option>\n                {/each}\n              </select>\n            </div>\n          </label>\n          <label class=\"block mt-4\" for=\"language\">\n            <span class=\"text-gray-900\">Language</span>\n            <div class=\"sm:flex sm:-mx-2 lg:block lg:mx-0\">\n              <select\n                class=\"mt-1 form-select block w-full text-gray-900 shadow\n                  bg-gray-400 hover:border-gray-200 focus:bg-gray-300\n                  border-none mr-2\"\n                name=\"language\"\n                bind:value={languageEdited}\n                on:blur={handleEditedLanguage}>\n                {#each editLanguages as editLanguage}\n                  <option value={editLanguage}>{editLanguage.text}</option>\n                {/each}\n              </select>\n            </div>\n          </label>\n          <label class=\"block mt-4\" for=\"badge\">\n            <span class=\"text-gray-900\">Badge</span>\n            <div class=\"sm:flex sm:-mx-2 lg:block lg:mx-0\">\n              <select\n                class=\"mt-1 form-select block w-full text-gray-900 shadow\n                  bg-gray-400 hover:border-gray-200 focus:bg-gray-300\n                  border-none mr-2\"\n                name=\"badge\"\n                bind:value={badgeEdited}\n                on:blur={handleEditedBadge}>\n                {#each editBadges as editBadge}\n                  <option value={editBadge}>{editBadge.text}</option>\n                {/each}\n              </select>\n            </div>\n          </label>\n          <label class=\"block mt-4\" for=\"duration\">\n            <span class=\"text-gray-900\">Duration</span>\n            <div class=\"sm:flex sm:-mx-2 lg:block lg:mx-0\">\n              <select\n                class=\"mt-1 form-select block w-full text-gray-900 shadow\n                  bg-gray-400 hover:border-gray-200 focus:bg-gray-300\n                  border-none mr-2\"\n                name=\"duration\"\n                bind:value={durationEdited}\n                on:blur={handleEditedDuration}>\n                {#each editDurations as editDuration}\n                  <option value={editDuration}>{editDuration.text}</option>\n                {/each}\n              </select>\n            </div>\n          </label>\n        </div>\n      </div>\n      <div class=\"block mt-6\">\n        <label\n          class=\"block w-full mt-4 py-1 rounded shadow bg-gray-400 text-gray-900\n            hover:bg-gray-500 sm:mt-0 sm:text-sm\">\n          <div class=\"ml-3 text-base\">Upload Cover Image</div>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            name=\"imageUrl\"\n            class=\"hidden\"\n            required\n            on:change={previewFile} />\n          <img\n            class=\"ml-3 text-base\"\n            src=\"\"\n            aria-label=\"Image preview\"\n            height=\"200\"\n            alt=\"Image preview...\" />\n        </label>\n      </div>\n      <div class=\"block mt-4\">\n        <span class=\"text-gray-900\">Rich Text Editor</span>\n      </div>\n      <div\n        class=\"mt-2 block w-full text-2xl text-gray-900 shadow bg-gray-400\n          hover:border-gray-200 focus:bg-gray-300 border-none\">\n        <div\n          class=\"editor\"\n          use:quill={options}\n          on:text-change={(e) => (syllabusContent = e.detail)} />\n        <br />\n      </div>\n      <div>\n        <label class=\"flex\">\n          <input\n            class=\"mt-3 form-checkbox h-5 w-5 block text-gray-900 bg-gray-400\n              hover:border-gray-200 focus:bg-gray-300 border-none\"\n            type=\"checkbox\"\n            name=\"preview\"\n            bind:checked={enablePreview} />\n          <span class=\"ml-2 mt-3\">Enable Preview HTML</span>\n        </label>\n        {#if enablePreview}\n          <div class=\"prose\">\n            {@html syllabusContent.html}\n          </div>\n        {/if}\n      </div>\n      <div class=\"mt-4 py-4 sm:text-right\">\n        <button\n          type=\"submit\"\n          aria-label=\"Publish\"\n          class=\"block w-full sm:w-auto sm:inline-block bg-blue-700\n            hover:bg-blue-600 font-semibold text-white px-6 py-2 rounded-lg\">\n          Publish\n        </button>\n        <div>PST Holders fee included</div>\n      </div>\n    </div>\n  </form>\n</div>\n",
    "<script>\n  import { arweave } from \"./arweave.js\";\n  import { readContract, selectWeightedPstHolder } from \"smartweave\";\n  import { read } from \"./syllabus.js\";\n  import { CONTRACTID } from \"./constants.js\";\n  export let wallet;\n  export let address;\n  export let txid;\n  export let prevPage;\n  $: render(txid);\n  let syllabus = {};\n  let title = \"\";\n  let subtitle = \"\";\n  let imageUrl = \"\";\n  let duration = \"\";\n  let language = \"\";\n  let rating = \"\";\n  let reviewCount = \"\";\n  let badge = \"\";\n  let author = \"\";\n  let mentorAvailable = \"\";\n  $: mentorRecipient = author;\n  let price = \"\";\n  let content = \"\";\n  let isFavorite = \"\";\n  let subject = \"\";\n  let status = \"\";\n  let apiVersion = \"\";\n  let timestamp = \"\";\n  let pstRecipient;\n  let pstFeeRecipient = 0.25;\n  const render = async (txid) => {\n    syllabus = await read(txid);\n    title = syllabus[\"tags\"][\"Syllabus-Title\"];\n    subtitle = syllabus[\"tags\"][\"Syllabus-Subtitle\"];\n    duration = syllabus[\"tags\"][\"Syllabus-Duration\"];\n    language = syllabus[\"tags\"][\"Syllabus-Language\"];\n    rating = syllabus[\"tags\"][\"Syllabus-Rating\"];\n    reviewCount = syllabus[\"tags\"][\"Syllabus-ReviewCount\"];\n    isFavorite = syllabus[\"tags\"][\"Syllabus-IsFavorite\"];\n    badge = syllabus[\"tags\"][\"Syllabus-Badge\"];\n    author = syllabus[\"tags\"][\"Syllabus-Author\"];\n    mentorAvailable = syllabus[\"tags\"][\"Syllabus-Mentor\"];\n    price = syllabus[\"tags\"][\"Syllabus-Price\"];\n    subject = syllabus[\"tags\"][\"Syllabus-Subject\"];\n    status = syllabus[\"tags\"][\"Syllabus-Status\"];\n    apiVersion = syllabus[\"tags\"][\"Syllabus-API\"];\n    timestamp = syllabus[\"tags\"][\"Syllabus-Timestamp\"];\n    imageUrl = syllabus.data.slice(0, syllabus[\"tags\"][\"Syllabus-ImageUrl\"]);\n    content = syllabus.data.slice(syllabus[\"tags\"][\"Syllabus-ImageUrl\"], -1);\n  };\n  async function getContractState() {\n    return readContract(arweave, CONTRACTID).then((state) => {\n      return state;\n    });\n  }\n  const submitMentor = async () => {\n    let feeMentor = parseFloat(price);\n    if (!wallet || !address) {\n      return;\n    }\n\n    let contractState = await getContractState();\n    pstRecipient = selectWeightedPstHolder(contractState.balances);\n    let pstTx = await arweave.createTransaction(\n      {\n        target: pstRecipient,\n        quantity: arweave.ar.arToWinston(pstFeeRecipient),\n      },\n      wallet\n    );\n    await arweave.transactions.sign(pstTx, wallet);\n    await arweave.transactions.post(pstTx);\n\n    let mentorTx = await arweave.createTransaction(\n      {\n        target: mentorRecipient,\n        quantity: arweave.ar.arToWinston(feeMentor),\n      },\n      wallet\n    );\n    await arweave.transactions.sign(mentorTx, wallet);\n    await arweave.transactions.post(mentorTx);\n  };\n</script>\n\n<style>\n  .aspect-16x9 {\n    padding-bottom: 56.25%;\n  }\n</style>\n\n<svelte:head>\n  <link href=\"//cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\" />\n</svelte:head>\n{#if prevPage == 'editor'}\n  <div class=\"px-6 py-12\">\n    <h3 class=\"px-6 py-6 flex justify-center text-gray-900 text-bold text-2xl\">\n      Your syllabus will be public once the network confirmation is done\n    </h3>\n  </div>\n{:else}\n  <div class=\"mt-8 flex\">\n    <div\n      class=\"px-2 max-w-md mx-auto sm:max-w-xl lg:max-w-full lg:w-1/2 lg:px-12\">\n      <div class=\"xl:max-w-lg xl:ml_auto\">\n        <img\n          class=\"mt-6 rounded-lg shadow-xl sm:mt-8 sm:h-64 sm:w-full\n            sm:object-cover sm:object-center lg:hidden\"\n          src={imageUrl}\n          alt={title} />\n        <div class=\"mt-2 text-gray-800 text-base font-semibold tracking-wide\">\n          {language} &bull; {duration}\n          {#if badge == 'Bestseller'}\n            <span\n              class=\"inline-block bg-yellow-400 text-gray-800 text-xs px-2\n                rounded-md uppercase font-semibold tracking-wide\">\n              {badge}\n            </span>\n          {:else if badge == 'Featured'}\n            <span\n              class=\"inline-block bg-indigo-400 text-gray-800 text-xs px-2\n                rounded-md uppercase font-semibold tracking-wide\">\n              {badge}\n            </span>\n          {:else if badge == 'Updated'}\n            <span\n              class=\"inline-block bg-purple-400 text-gray-800 text-xs px-2\n                rounded-md uppercase font-semibold tracking-wide\">\n              {badge}\n            </span>\n          {:else if badge == 'New'}\n            <span\n              class=\"inline-block bg-blue-400 text-gray-800 text-xs px-2\n                rounded-md uppercase font-semibold tracking-wide\">\n              {badge}\n            </span>\n          {:else}\n            <span\n              class=\"inline-block bg-red-400 text-gray-800 text-xs px-2\n                rounded-md uppercase font-semibold tracking-wide\">\n              {badge}\n            </span>\n          {/if}\n        </div>\n        <div class=\"items-baseline\" />\n        <h1\n          class=\"text-2xl font-bold text-gray-900 leading-tight sm:mt-8\n            sm:text-4xl md:mt-1 md:text-3xl lg:mt-2 lg:text-3xl xl:mt-2\n            xl:text-4xl truncate\">\n          {title}\n        </h1>\n        <h2\n          class=\"text-gray-600 text-xl font-normal sm:mt-4 sm:text-2xl md:mt-1\n            md:text-xl lg:text-2xl xl:text-3xl truncate\">\n          {subtitle}\n        </h2>\n        <span class=\"text-teal-800 font-semibold text-sm\">{rating}</span>\n        <span class=\"ml-2 text-gray-800 text-sm\">({reviewCount} ratings)</span>\n        <div\n          class=\"mt-1 text-gray-900 font-light text-sm leading-tight row-span-2\n            truncate\">\n          Mentored by <a class=\"text-blue-900 underline\" href=\"#/mentored/{author}\"> {author} </a>\n        </div>\n        {#if mentorAvailable == 'Available'}\n          <form on:submit|preventDefault={submitMentor}>\n            <div class=\"mt-4 sm:mt-6\">\n              <button\n                type=\"submit\"\n                aria-label=\"Apply Mentor\"\n                class=\"inline-block px-5 py-3 rounded-lg shadow-lg bg-blue-700\n                  hover:bg-blue-600 text-white tracking-wider font-semibold\n                  sm:text-base\">\n                Get Coached starting from AR {price}\n              </button>\n              <div>0.25 AR PST Holders fee will be applied</div>\n            </div>\n          </form>\n        {/if}\n      </div>\n    </div>\n    <div class=\"hidden lg:block lg:w-1/2 lg:relative lg:mr-8\">\n      <img\n        class=\"absolute inset-0 h-64 w-full object-cover object-center\n          rounded-lg\"\n        src={imageUrl}\n        alt={title} />\n    </div>\n  </div>\n  <div\n    class=\"mt-16 px-2 max-w-md mx-auto sm:max-w-xl lg:max-w-full lg:px-12\n      aspect-16x9\">\n    {@html content}\n  </div>\n{/if}\n",
    "<script>\n  import SyllabusItem from \"./SyllabusItem.svelte\";\n  import {\n    searchStore,\n    subjectsStore,\n    languagesStore,\n    badgesStore,\n    mentorsStore,\n  } from \"./stores.js\";\n  export let syllabiStore;\n  import { onMount } from \"svelte\";\n  import { syllabiByApp } from \"./syllabi.js\";\n  let syllabiSearch = [];\n  let resultsSearch = [];\n  let resultsFilter = [1];\n  let filtersEnded = false;\n  $: noFiltersApply = resultsFilter.length;\n  $: resultsFilter = syllabiSearch.filter((syllabusSearch) => {\n    const subject = syllabusSearch.tags[\"Syllabus-Subject\"];\n    const language = syllabusSearch.tags[\"Syllabus-Language\"];\n    const badge = syllabusSearch.tags[\"Syllabus-Badge\"];\n    const mentorAvailable = syllabusSearch.tags[\"Syllabus-Mentor\"];\n    if ($subjectsStore == \"All\") {\n      if ($languagesStore == \"All\") {\n        if ($badgesStore == \"All\") {\n          if ($mentorsStore == \"All\") {\n            filtersEnded = true;\n            return \"All\";\n          } else {\n            filtersEnded = true;\n            return mentorAvailable.includes($mentorsStore);\n          }\n        } else {\n          if ($mentorsStore == \"All\") {\n            filtersEnded = true;\n            return badge.includes($badgesStore);\n          } else {\n            filtersEnded = true;\n            return (\n              badge.includes($badgesStore) &&\n              mentorAvailable.includes($mentorsStore)\n            );\n          }\n        }\n      } else {\n        if ($badgesStore == \"All\") {\n          if ($mentorsStore == \"All\") {\n            filtersEnded = true;\n            return language.includes($languagesStore);\n          } else {\n            filtersEnded = true;\n            return (\n              language.includes($languagesStore) &&\n              mentorAvailable.includes($mentorsStore)\n            );\n          }\n        } else {\n          if ($mentorsStore == \"All\") {\n            filtersEnded = true;\n            return (\n              language.includes($languagesStore) && badge.includes($badgesStore)\n            );\n          } else {\n            filtersEnded = true;\n            return (\n              language.includes($languagesStore) &&\n              badge.includes($badgesStore) &&\n              mentorAvailable.includes($mentorsStore)\n            );\n          }\n        }\n      }\n    } else {\n      if ($languagesStore == \"All\") {\n        if ($badgesStore == \"All\") {\n          if ($mentorsStore == \"All\") {\n            filtersEnded = true;\n            return subject.includes($subjectsStore);\n          } else {\n            filtersEnded = true;\n            return (\n              subject.includes($subjectsStore) &&\n              mentorAvailable.includes($mentorsStore)\n            );\n          }\n        } else {\n          if ($mentorsStore == \"All\") {\n            filtersEnded = true;\n            return (\n              subject.includes($subjectsStore) && badge.includes($badgesStore)\n            );\n          } else {\n            filtersEnded = true;\n            return (\n              subject.includes($subjectsStore) &&\n              badge.includes($badgesStore) &&\n              mentorAvailable.includes($mentorsStore)\n            );\n          }\n        }\n      } else {\n        if ($badgesStore == \"All\") {\n          if ($mentorsStore == \"All\") {\n            filtersEnded = true;\n            return (\n              subject.includes($subjectsStore) &&\n              language.includes($languagesStore)\n            );\n          } else {\n            filtersEnded = true;\n            return (\n              subject.includes($subjectsStore) &&\n              language.includes($languagesStore) &&\n              mentorAvailable.includes($mentorsStore)\n            );\n          }\n        } else {\n          if ($mentorsStore == \"All\") {\n            filtersEnded = true;\n            return (\n              subject.includes($subjectsStore) &&\n              language.includes($languagesStore) &&\n              badge.includes($badgesStore)\n            );\n          } else {\n            filtersEnded = true;\n            return (\n              subject.includes($subjectsStore) &&\n              language.includes($languagesStore) &&\n              badge.includes($badgesStore) &&\n              mentorAvailable.includes($mentorsStore)\n            );\n          }\n        }\n      }\n    }\n  });\n  $: resultsSearch = syllabiSearch.filter((syllabusSearch) => {\n    const title = syllabusSearch.tags[\"Syllabus-Title\"].toLowerCase();\n    const subtitle = syllabusSearch.tags[\"Syllabus-Subtitle\"].toLowerCase();\n    const content = syllabusSearch.data.toLowerCase();\n    return (\n      title.includes($searchStore) ||\n      subtitle.includes($searchStore) ||\n      content.includes($searchStore)\n    );\n  });\n  onMount(async () => {\n    syllabiSearch = await syllabiByApp();\n  });\n</script>\n\n<style>\n  section {\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 1rem;\n  }\n  @media (min-width: 640px) {\n    section {\n      grid-template-columns: repeat(1, 1fr);\n    }\n  }\n  @media (min-width: 768px) {\n    section {\n      grid-template-columns: repeat(3, 1fr);\n    }\n  }\n  @media (min-width: 1024px) {\n    section {\n      grid-template-columns: repeat(4, 1fr);\n    }\n  }\n  @media (min-width: 1280px) {\n    section {\n      grid-template-columns: repeat(5, 1fr);\n    }\n  }\n</style>\n\n{#if $searchStore == ''}\n  <h3 class=\"px-6 py-6 text-gray-900 text-bold text-2xl truncate\">\n    {#if $badgesStore == 'All' && $languagesStore == 'All' && $mentorsStore != 'All' && $subjectsStore == 'All'}\n      {$mentorsStore} Mentors for Syllabi\n    {:else if $badgesStore == 'All' && $languagesStore == 'All' && $mentorsStore != 'All'}\n      {$mentorsStore} Mentors for {$subjectsStore} Syllabi\n    {:else if $badgesStore == 'All' && $languagesStore == 'All'}\n      {$subjectsStore} Syllabi\n    {:else if $subjectsStore == 'All' && $badgesStore == 'All' && $languagesStore != 'All'}\n      {$mentorsStore} Mentors for {$languagesStore} Syllabi\n    {:else if $subjectsStore != 'All' && $badgesStore == 'All' && $languagesStore != 'All'}\n      {$mentorsStore} Mentors for {$languagesStore} {$subjectsStore} Syllabi\n    {:else if $subjectsStore == 'All' && $languagesStore == 'All' && $badgesStore != 'All'}\n      {$mentorsStore} Mentors for {$badgesStore} Syllabi\n    {:else if $subjectsStore == 'All' && $languagesStore != 'All' && $badgesStore != 'All'}\n      {$mentorsStore} Mentors for {$languagesStore} {$badgesStore} Syllabi\n    {:else}\n      {$mentorsStore} Mentors for {$badgesStore} {$languagesStore}\n      {$subjectsStore} Syllabi\n    {/if}\n  </h3>\n  <section class=\"mt-2 px-6\">\n    {#each syllabiStore as syllabus}\n      {#if $subjectsStore == 'All'}\n        {#if $languagesStore == 'All'}\n          {#if $badgesStore == 'All'}\n            {#if $mentorsStore == 'All'}\n              <SyllabusItem id={syllabus.id} />\n            {:else if syllabus.mentorAvailable == $mentorsStore}\n              <SyllabusItem id={syllabus.id} />\n            {/if}\n          {:else if syllabus.badge == $badgesStore}\n            {#if $mentorsStore == 'All'}\n              <SyllabusItem id={syllabus.id} />\n            {:else if syllabus.mentorAvailable == $mentorsStore}\n              <SyllabusItem id={syllabus.id} />\n            {/if}\n          {/if}\n        {:else if syllabus.language == $languagesStore}\n          {#if $badgesStore == 'All'}\n            {#if $mentorsStore == 'All'}\n              <SyllabusItem id={syllabus.id} />\n            {:else if syllabus.mentorAvailable == $mentorsStore}\n              <SyllabusItem id={syllabus.id} />\n            {/if}\n          {:else if syllabus.badge == $badgesStore}\n            {#if $mentorsStore == 'All'}\n              <SyllabusItem id={syllabus.id} />\n            {:else if syllabus.mentorAvailable == $mentorsStore}\n              <SyllabusItem id={syllabus.id} />\n            {/if}\n          {/if}\n        {/if}\n      {:else if syllabus.subject == $subjectsStore}\n        {#if $languagesStore == 'All'}\n          {#if $badgesStore == 'All'}\n            {#if $mentorsStore == 'All'}\n              <SyllabusItem id={syllabus.id} />\n            {:else if syllabus.mentorAvailable == $mentorsStore}\n              <SyllabusItem id={syllabus.id} />\n            {/if}\n          {:else if syllabus.badge == $badgesStore}\n            {#if $mentorsStore == 'All'}\n              <SyllabusItem id={syllabus.id} />\n            {:else if syllabus.mentorAvailable == $mentorsStore}\n              <SyllabusItem id={syllabus.id} />\n            {/if}\n          {/if}\n        {:else if syllabus.language == $languagesStore}\n          {#if $badgesStore == 'All'}\n            {#if $mentorsStore == 'All'}\n              <SyllabusItem id={syllabus.id} />\n            {:else if syllabus.mentorAvailable == $mentorsStore}\n              <SyllabusItem id={syllabus.id} />\n            {/if}\n          {:else if syllabus.badge == $badgesStore}\n            {#if $mentorsStore == 'All'}\n              <SyllabusItem id={syllabus.id} />\n            {:else if syllabus.mentorAvailable == $mentorsStore}\n              <SyllabusItem id={syllabus.id} />\n            {/if}\n          {/if}\n        {/if}\n      {/if}\n    {/each}\n  </section>\n  {#if filtersEnded && noFiltersApply == 0}\n    <h3\n      class=\"px-6 py-6 text-gray-900 text-bold text-xl md:text-xl lg:text-2xl\n      xl:text-2xl\">\n      Sorry, there are no syllabus for these filters\n      <br />\n      Try filter for something else\n    </h3>\n  {/if}\n{:else}\n  {#if resultsSearch.length > 0}\n    <h3 class=\"px-6 py-6 text-gray-900 text-bold text-2xl\">\n      Search results for \"{$searchStore}\"\n    </h3>\n    <section class=\"mt-2 px-6\">\n      {#each syllabiStore as syllabus}\n        {#if syllabus.title\n          .toLowerCase()\n          .includes(\n            $searchStore\n          ) || syllabus.subtitle\n            .toLowerCase()\n            .includes(\n              $searchStore\n            ) || syllabus.content.toLowerCase().includes($searchStore)}\n          <SyllabusItem id={syllabus.id} />\n        {/if}\n      {/each}\n    </section>\n  {:else}\n    <h3\n      class=\"px-6 py-6 text-gray-900 text-bold text-2xl md:text-2xl lg:text-3xl\n      xl:text-3xl\">\n      Sorry, there are no syllabus for \"{$searchStore}\"\n      <br />\n      Try searching for something else\n    </h3>\n  {/if}\n{/if}\n",
    "<script>\n  import SyllabusItem from \"./SyllabusItem.svelte\";\n  export let txid;\n  export let syllabiByMentorStore;\n</script>\n\n<style>\n  section {\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 1rem;\n  }\n  @media (min-width: 640px) {\n    section {\n      grid-template-columns: repeat(1, 1fr);\n    }\n  }\n  @media (min-width: 768px) {\n    section {\n      grid-template-columns: repeat(3, 1fr);\n    }\n  }\n  @media (min-width: 1024px) {\n    section {\n      grid-template-columns: repeat(4, 1fr);\n    }\n  }\n  @media (min-width: 1280px) {\n    section {\n      grid-template-columns: repeat(5, 1fr);\n    }\n  }\n</style>\n\n<h3 class=\"px-6 py-6 text-gray-900 text-bold text-3xl truncate\">\n  Mentored by {txid}\n</h3>\n<section class=\"mt-2 px-6\">\n  {#each syllabiByMentorStore as syllabus}\n    {#if syllabus.author == txid}\n      <SyllabusItem id={syllabus.id} />\n    {/if}\n  {/each}\n</section>\n"
  ],
  "names": [],
  "mappings": "AA0JE,OAAO,eAAC,CAAC,AACP,SAAS,CAAE,IAAI,AACjB,CAAC;ACrED,YAAY,cAAC,CAAC,AACZ,cAAc,CAAE,MAAM,AACxB,CAAC;ACgED,OAAO,eAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAC1B,QAAQ,CAAE,IAAI,AAChB,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,eAAC,CAAC,AACP,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AACH,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,eAAC,CAAC,AACP,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AACH,CAAC,AACD,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC1B,OAAO,eAAC,CAAC,AACP,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AACH,CAAC,AACD,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC1B,OAAO,eAAC,CAAC,AACP,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AACH,CAAC;AC3KD,OAAO,eAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAC1B,QAAQ,CAAE,IAAI,AAChB,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,eAAC,CAAC,AACP,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AACH,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,eAAC,CAAC,AACP,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AACH,CAAC,AACD,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC1B,OAAO,eAAC,CAAC,AACP,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AACH,CAAC,AACD,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC1B,OAAO,eAAC,CAAC,AACP,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AACH,CAAC"
}